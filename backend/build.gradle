plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

jacoco {
	toolVersion = "0.8.13"
}

group = 'cloudflight.integra'
version = '0.0.1-SNAPSHOT'
description = 'backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml:classmate:1.5.1'
	implementation 'org.projectlombok:lombok:1.18.38'
	compileOnly 'org.projectlombok:lombok:1.18.38'
	annotationProcessor 'org.projectlombok:lombok:1.18.38'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.mockito:mockito-core:5.14.2")
	testImplementation("org.mockito:mockito-junit-jupiter:5.14.2")
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport, jacocoTestCoverageVerification
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'cloudflight/integra/backend/BackendApplication*'
			])
		}))
	}
}

jacocoTestCoverageVerification {
	dependsOn test
	violationRules {
		rule {
			element = 'PACKAGE'
			limit {[
					{
						counter = 'BRANCHES'
						value = 'COVEREDRATIO'
						minimum = 1
					},
					{
						counter = 'INSTRUCTIONS'
						value = 'COVEREDRATIO'
						minimum = 1
					}
			]
			}
		}
	}
}
